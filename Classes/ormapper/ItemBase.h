// Generated by O/R mapper generator ver 1.0

#import <UIKit/UIKit.h>
#import "ORRecord.h"

@class Item;

@interface ItemBase : ORRecord {
    NSDate* mDate;
    int mShelfId;
    int mServiceId;
    NSString* mIdString;
    NSString* mAsin;
    NSString* mName;
    NSString* mAuthor;
    NSString* mManufacturer;
    NSString* mCategory;
    NSString* mDetailURL;
    NSString* mPrice;
    NSString* mTags;
    NSString* mMemo;
    NSString* mImageURL;
    int mSorder;
    int mStar;
}

@property(nonatomic,retain) NSDate* date;
@property(nonatomic,assign) int shelfId;
@property(nonatomic,assign) int serviceId;
@property(nonatomic,retain) NSString* idString;
@property(nonatomic,retain) NSString* asin;
@property(nonatomic,retain) NSString* name;
@property(nonatomic,retain) NSString* author;
@property(nonatomic,retain) NSString* manufacturer;
@property(nonatomic,retain) NSString* category;
@property(nonatomic,retain) NSString* detailURL;
@property(nonatomic,retain) NSString* price;
@property(nonatomic,retain) NSString* tags;
@property(nonatomic,retain) NSString* memo;
@property(nonatomic,retain) NSString* imageURL;
@property(nonatomic,assign) int sorder;
@property(nonatomic,assign) int star;

+ (BOOL)migrate;

// CRUD (Create/Read/Update/Delete) operations

// Create/update operations
// Note: You should use 'save' method
- (void)_insert;
- (void)_update;

// Read operations (Finder)
+ (Item *)find:(int)pid;
+ (Item *)find_by_date:(NSDate*)key cond:(NSString*)cond;
+ (Item *)find_by_date:(NSDate*)key;
+ (Item *)find_by_itemState:(int)key cond:(NSString*)cond;
+ (Item *)find_by_itemState:(int)key;
+ (Item *)find_by_idType:(int)key cond:(NSString*)cond;
+ (Item *)find_by_idType:(int)key;
+ (Item *)find_by_idString:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_idString:(NSString*)key;
+ (Item *)find_by_asin:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_asin:(NSString*)key;
+ (Item *)find_by_name:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_name:(NSString*)key;
+ (Item *)find_by_author:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_author:(NSString*)key;
+ (Item *)find_by_manufacturer:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_manufacturer:(NSString*)key;
+ (Item *)find_by_productGroup:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_productGroup:(NSString*)key;
+ (Item *)find_by_detailURL:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_detailURL:(NSString*)key;
+ (Item *)find_by_price:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_price:(NSString*)key;
+ (Item *)find_by_tags:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_tags:(NSString*)key;
+ (Item *)find_by_memo:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_memo:(NSString*)key;
+ (Item *)find_by_imageURL:(NSString*)key cond:(NSString*)cond;
+ (Item *)find_by_imageURL:(NSString*)key;
+ (Item *)find_by_sorder:(int)key cond:(NSString*)cond;
+ (Item *)find_by_sorder:(int)key;
+ (Item *)find_by_star:(int)key cond:(NSString*)cond;
+ (Item *)find_by_star:(int)key;

+ (NSMutableArray *)find_all:(NSString *)cond;

+ (dbstmt *)gen_stmt:(NSString *)cond;
+ (Item *)find_first_stmt:(dbstmt *)stmt;
+ (NSMutableArray *)find_all_stmt:(dbstmt *)stmt;

// Delete operations
- (void)delete;
+ (void)delete_cond:(NSString *)cond;
+ (void)delete_all;

// internal functions
+ (NSString *)tableName;
- (void)_loadRow:(dbstmt *)stmt;

@end
